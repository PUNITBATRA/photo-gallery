{"version":3,"sources":["firebase/config.js","hooks/useStorage.js","hooks/useFirestore.js","components/ImageGrid.js","components/Modal.js","components/Title.js","components/ProgressBar.js","components/UploadForms.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectstorage","storage","projectfirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelected","console","log","className","map","motion","div","layout","whileHover","opacity","key","onClick","img","src","alt","initial","animate","transition","delay","Modal","selected","e","target","classList","contains","y","Title","ProgressBar","setFile","width","UploadForms","types","type","onChange","files","includes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6cbd9f6.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyACdnAPCGOAssAPhmBSTmBVwOcC2Fo1dEk\",\n  authDomain: \"photo-gallery-2193d.firebaseapp.com\",\n  projectId: \"photo-gallery-2193d\",\n  storageBucket: \"photo-gallery-2193d.appspot.com\",\n  messagingSenderId: \"190988179183\",\n  appId: \"1:190988179183:web:ac87af3a5f5a8cd3de6d1a\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst projectstorage = firebase.storage();\nconst projectfirestore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport { projectstorage, projectfirestore, timestamp };\n","import { useState, useEffect } from \"react\";\nimport {\n  projectstorage,\n  projectfirestore,\n  timestamp,\n} from \"../firebase/config\";\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    const storageRef = projectstorage.ref(file.name);\n    const collectionRef = projectfirestore.collection(\"images\");\n    storageRef.put(file).on(\n      \"state_changed\",\n      (snap) => {\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n        setProgress(percentage);\n      },\n      (err) => {\n        setError(err);\n      },\n      async () => {\n        const url = await storageRef.getDownloadURL();\n        const createdAt = timestamp();\n        collectionRef.add({ url, createdAt });\n        setUrl(url);\n      }\n    );\n  }, [file]);\n\n  return { progress, url, error };\n};\n\nexport default useStorage;\n","import React, { useState, useEffect } from \"react\";\nimport { projectfirestore } from \"../firebase/config\";\nimport useStorage from \"./useStorage\";\nconst useFirestore = (collection) => {\n  const [docs, setDocs] = useState([]);\n\n  useEffect(() => {\n    const unsub = projectfirestore\n      .collection(collection)\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snap) => {\n        let documents = [];\n        snap.forEach((doc) => {\n          documents.push({ ...doc.data(), id: doc.id });\n        });\n        setDocs(documents);\n      });\n\n    return () => unsub();\n  }, [collection]);\n\n  return { docs };\n};\n\nexport default useFirestore;\n","import React from \"react\";\nimport useFirestore from \"../hooks/useFirestore\";\nimport { motion } from \"framer-motion\";\nconst ImageGrid = ({ setSelected }) => {\n  const { docs } = useFirestore(\"images\");\n  console.log(docs);\n  return (\n    <div className=\"img-grid\">\n      {docs &&\n        docs.map((doc) => (\n          <motion.div\n            layout\n            whileHover={{ opacity: 1 }}\n            className=\"img-wrap\"\n            key={doc.id}\n            onClick={() => setSelected(doc.url)}\n          >\n            <motion.img\n              src={doc.url}\n              alt=\"alternate pic\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 1 }}\n            />\n          </motion.div>\n        ))}\n    </div>\n  );\n};\n\nexport default ImageGrid;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nconst Modal = ({ selected, setSelected }) => {\n  const handleClick = (e) => {\n    if (e.target.classList.contains(\"backdrop\")) setSelected(null);\n  };\n  return (\n    <motion.div\n      className=\"backdrop\"\n      onClick={handleClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n    >\n      <motion.img\n        src={selected}\n        alt=\"zoom view\"\n        initial={{ y: \"-100vh\" }}\n        animate={{ y: 0 }}\n      />\n    </motion.div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>Photo-Gallery</h1>\n      <h2>Your Pictures</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  );\n};\n\nexport default Title;\n","import React, { useEffect } from \"react\";\nimport useStorage from \"../hooks/useStorage\";\nimport { motion } from \"framer-motion\";\n\nconst ProgressBar = ({ file, setFile }) => {\n  const { url, progress } = useStorage(file);\n\n  useEffect(() => {\n    if (url) {\n      setFile(null);\n    }\n  }, [url, setFile]);\n\n  console.log(progress, url);\n  return (\n    <motion.div\n      className=\"progress-bar\"\n      initial={{ width: 0 }}\n      animate={{ width: progress + \"%\" }}\n    ></motion.div>\n  );\n};\nexport default ProgressBar;\n","import React, { useState } from \"react\";\nimport ProgressBar from \"./ProgressBar\";\n\nfunction UploadForms() {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  const types = [\"image/jpeg\", \"image/png\", \"image/jpg\"];\n  const changeHandler = (e) => {\n    let selected = e.target.files[0];\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError(\"\");\n    } else {\n      setFile(null);\n      setError(\"Please select an image file (jpeg,png,jpg)\");\n    }\n  };\n  return (\n    <form>\n      <label>\n        <input type=\"file\" onChange={changeHandler} />\n        <span>+</span>\n      </label>\n      <div className=\"output\">\n        {error && <div className=\"error\">{error}</div>}\n        {file && <div>{file.name}</div>}\n        {file && <ProgressBar file={file} setFile={setFile} />}\n      </div>\n    </form>\n  );\n}\n\nexport default UploadForms;\n","import React, { useState } from \"react\";\nimport ImageGrid from \"./components/ImageGrid\";\nimport Modal from \"./components/Modal\";\nimport Title from \"./components/Title\";\nimport UploadForms from \"./components/UploadForms\";\n\nfunction App() {\n  const [selected, setSelected] = useState(null);\n  return (\n    <div className=\"App\">\n      <Title />\n      <UploadForms />\n      <ImageGrid setSelected={setSelected} />\n      {selected && <Modal selected={selected} setSelected={setSelected} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}